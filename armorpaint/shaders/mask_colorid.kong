
// Turn picked color id into mask

#[set(everything)]
const texpaint_colorid: tex2d; // 1x1 picked color

#[set(everything)]
const texpaint_colorid_sampler: sampler;

#[set(everything)]
const texcolorid: tex2d;

#[set(everything)]
const texcolorid_sampler: sampler;

struct vert_in {
	pos: float2;
}

struct vert_out {
	pos: float4;
	tex: float2;
}

fun mask_colorid_vert(input: vert_in): vert_out {
	var output: vert_out;
	output.tex = input.pos.xy * 0.5 + 0.5;
	output.tex.y = 1.0 - output.tex.y;
	output.pos = float4(input.pos.xy, 0.0, 1.0);
	return output;
}

fun mask_colorid_frag(input: vert_out): float4 {
	var coord: int2 = int2(0, 0);
	var colorid_c1: float4 = texpaint_colorid[coord];
	var colorid_c2: float4 = sample_lod(texcolorid, texcolorid_sampler, input.tex, 0.0);
	if (colorid_c1.x != colorid_c2.x || colorid_c1.y != colorid_c2.y || colorid_c1.z != colorid_c2.z) {
		discard;
	}
	return float4(1.0, 1.0, 1.0, 1.0);
}

#[pipe]
struct pipe {
	vertex = mask_colorid_vert;
	fragment = mask_colorid_frag;
}
